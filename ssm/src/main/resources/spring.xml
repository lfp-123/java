<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
<!--扫描包 controller springmvc扫-->
<!--service -->

<context:component-scan base-package="com.seecen.ssm.service"></context:component-scan>
<!--加载JDBC-->
<context:property-placeholder location="classpath*:jdbc.properties"></context:property-placeholder>
<!--创建数据源使用德鲁伊数据源 来创建数据源-->
<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="clone">
    <!--初始化的方法 以及销毁的方法-->
    <property name="url" value="${jdbc.url}"></property>
    <property name="driverClassName" value="${jdbc.driver}"></property>
    <property name="username" value="${jdbc.username}"></property>
    <property name="password" value="${jdbc.password}"></property>
    <!--配置连接池的基本属性-->
    <property name="initialSize" value="5"></property>
    <!--最小的连接数量-->
    <property name="minIdle" value="5"></property>
    <!--最大的连接数量-->
    <property name="maxActive" value="20"></property>
    <!--最大等待时间-->
    <property name="maxWait" value="60000"></property>
    <!--最小空闲时间-->
    <property name="minEvictableIdleTimeMillis" value="300000"></property>
    <!--如果连接空闲时间超出是最大值 执行validationquery 去验证是否可用-->
    <property name="testWhileIdle" value="true"></property>
    <!--执行验证-->
    <property name="validationQuery" value="select 1 from dual"></property>
</bean>



<!--整合mybatis-->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!--数据源-->
    <property name="dataSource" ref="dataSource"></property>
    <!--配置文件路径-->
    <property name="configLocation" value="classpath:mybatis.xml"></property>
    <!--关联映射文件路径-->
    <property name="mapperLocations" value="classpath*:mapper/*.xml"></property>
</bean>
<!--整个mybatis的mapper接口 spring会通过动态代理自动讲mapper接库生成对应的实现类-->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!--指定mybatis接口目录-->
    <property name="basePackage" value="com.seecen.ssm.mapper"></property>
    <!--注入sqlSessionFactor 工厂名称对象-->
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
</bean>


<!--配置事务管理器-->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"></property>
</bean>
<!--事务模板对象-->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
    <!--事务的属性-->
    <tx:attributes>
        <tx:method name="del*" propagation="SUPPORTS" read-only="true" />
        <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
        <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
        <tx:method name="load*" propagation="SUPPORTS" read-only="true" />
        <tx:method name="read*" propagation="SUPPORTS" read-only="true" />
        <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
    </tx:attributes>
</tx:advice>

<!-- 把事务控制在service层 -->
<aop:config>
    <!--配置切入点表达式-->
    <aop:pointcut id="iccardTerm" expression="execution(public * com.service.*.*(..))" />
    <!--建立切入点表达式和事务通知的关系-->
    <aop:advisor pointcut-ref="iccardTerm" advice-ref="txAdvice" />
</aop:config>

</beans>
